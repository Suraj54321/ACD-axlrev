<!-- <!DOCTYPE html>
<html>
<head>
    <title>Agent Interface</title>
    <script src="https://media.twiliocdn.com/sdk/js/client/v1.11/twilio.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
</head>
<body>
    <h1>Welcome, Agent <span id="agent-id"></span></h1>
    <button id="call-button">Call</button>
    <div id="notification"></div>
    <script>
        const callButton = document.getElementById('call-button');
        const agentIdSpan = document.getElementById('agent-id');
        const notificationDiv = document.getElementById('notification');
        const socket = io();
        
        const token = localStorage.getItem('twilioToken');
        const agentId = localStorage.getItem('agentId');
        agentIdSpan.textContent = agentId;
        
        if (token) {
            const device = new Twilio.Device(token, {
                codecPreferences: ['opus', 'pcmu'],
                fakeLocalDTMF: true,
                enableRingingState: true
            });

            device.on('incoming', (connection) => {
                console.log('Incoming call from:', connection.parameters.From);
                connection.accept();
            });

            callButton.addEventListener('click', () => {
                const params = { To: 'support' };
                device.connect(params);
            });
            socket.on('incoming-call', (data) => {
                notificationDiv.innerHTML = `Incoming call from ${data.caller} for ${data.agent.name}`;
            });
        } else {
            alert('No token found. Please login first.');
            window.location.href = 'http://localhost:3000/login';
        }
    </script>
</body>
</html> -->

<!DOCTYPE html>
<html>
<head>
    <title>Agent Interface</title>
    <script src="https://media.twiliocdn.com/sdk/js/client/v1.11/twilio.min.js"></script>
</head>
<body>
    <h1>Welcome, Agent <span id="agent-id"></span></h1>
    <div id="notification"></div>
    <button id="accept-button">Accept</button>
    <button id="reject-button">Reject</button>
    <audio id="ringtone" src="https://api.twilio.com/cowbell.mp3" preload="auto"></audio>
    <script>
        // const callButton = document.getElementById('call-button');
        const notificationDiv = document.getElementById('notification');
        const acceptButton = document.getElementById('accept-button');
        const rejectButton = document.getElementById('reject-button');
        const agentIdSpan = document.getElementById('agent-id');
        const agentId = localStorage.getItem('agentId');
        agentIdSpan.textContent = agentId;
        // const socket = io();
        const ringtone = document.getElementById('ringtone');
        const token = localStorage.getItem('twilioToken');
        console.log(token)
        if(token){
            const device=new Twilio.Device(token, {
                codecPreferences: ['opus', 'pcmu'],
                fakeLocalDTMF: true,
                enableRingingState: true
            });
            console.log(device)
            device.on('ready',() => {
                console.log('Twilio.Device Ready');
            });

            device.on('error',(error) => {
                console.error('Twilio.Device Error:', error.message);
            });

            device.on('connect',() => {
                console.log('Successfully established call');
                // document.getElementById('call-controls').style.display = 'block';
            });

            // device.on('disconnect',() => {
            //     console.log('Call ended');
            //     document.getElementById('call-controls').style.display = 'none';
            // });

            device.on('incoming',(connection) => {
                console.log("Hello world")
                currentConnection = connection;
                ringtone.play();
                notificationDiv.innerHTML = `Incoming call from ${connection.parameters.From}`;
                acceptButton.style.display = 'inline-block';
                rejectButton.style.display = 'inline-block';
                // console.log('Incoming call from ' + connection.parameters.From);
                // connection.accept();
                // currentConnection = connection;
                // ringtone.play();
                // notificationDiv.innerHTML = `Incoming call from ${connection.parameters.From}`;
                // acceptButton.style.display = 'inline-block';
                // rejectButton.style.display = 'inline-block';
            });

            document.getElementById('accept-button').addEventListener('click', () => {
                Twilio.Device.activeConnection().accept();
            });

            document.getElementById('reject-button').addEventListener('click', () => {
                Twilio.Device.activeConnection().disconnect();
            })
        }
        // fetch('/token', {
        //     method: 'POST',
        //     headers: { 'Content-Type': 'application/json' },
        //     body: JSON.stringify({ identity: 'agent-web' })
        // })
        // .then(response => response.json())
        // .then(data => {
        //     console.log(data.token)
        //     const device = new Twilio.Device(data.token, {
        //         codecPreferences: ['opus', 'pcmu'],
        //         fakeLocalDTMF: true,
        //         enableRingingState: true
        //     });

        //     device.on('incoming', (connection) => {
        //         currentConnection = connection;
        //         ringtone.play();
        //         notificationDiv.innerHTML = `Incoming call from ${connection.parameters.From}`;
        //         acceptButton.style.display = 'inline-block';
        //         rejectButton.style.display = 'inline-block';
        //     });

        //     callButton.addEventListener('click', () => {
        //         const params = { To: 'support' };
        //         device.connect(params);
        //     });

        //     acceptButton.addEventListener('click', () => {
        //         // if (currentConnection) {
        //             // currentConnection.accept();
        //             ringtone.pause();
        //             ringtone.currentTime = 0;
        //             acceptButton.style.display = 'none';
        //             rejectButton.style.display = 'none';
        //             device.connect(params);
        //             notificationDiv.innerHTML = 'Call accepted';
        //         // }
        //     });

        //     rejectButton.addEventListener('click', () => {
        //         // if (currentConnection) {
        //             // currentConnection.reject();
        //             ringtone.pause();
        //             ringtone.currentTime = 0;
        //             acceptButton.style.display = 'none';
        //             rejectButton.style.display = 'none';
        //             notificationDiv.innerHTML = 'Call rejected';
        //         // }
        //     });

        //     socket.on('incoming-call', (data) => {
        //         notificationDiv.innerHTML = `Incoming call from ${data.caller} for ${data.agent.name}`;
        //         // ringtone.play();
        //         acceptButton.style.display = 'inline-block';
        //         rejectButton.style.display = 'inline-block';
        //     });
        // })
        // .catch(error => console.error('Error fetching token:', error));
    </script>
</body>
</html>

